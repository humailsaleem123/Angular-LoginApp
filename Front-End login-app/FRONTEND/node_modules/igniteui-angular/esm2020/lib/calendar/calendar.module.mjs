import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { IgxIconModule } from '../icon/public_api';
import { IgxCalendarComponent } from './calendar.component';
import { IgxCalendarHeaderTemplateDirective, IgxCalendarMonthDirective, IgxCalendarSubheaderTemplateDirective, IgxCalendarYearDirective, IgxCalendarScrollMonthDirective } from './calendar.directives';
import { IgxMonthsViewComponent } from './months-view/months-view.component';
import { IgxYearsViewComponent } from './years-view/years-view.component';
import { IgxDaysViewComponent } from './days-view/days-view.component';
import { IgxDayItemComponent } from './days-view/day-item.component';
import { IgxMonthPickerComponent } from './month-picker/month-picker.component';
import { IgxCalendarBaseDirective } from './calendar-base';
import { IgxMonthPickerBaseDirective } from './month-picker-base';
import { IgxMonthViewSlotsCalendar, IgxGetViewDateCalendar } from './months-view.pipe';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export class IgxCalendarModule {
}
IgxCalendarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.0", ngImport: i0, type: IgxCalendarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IgxCalendarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.0.0", ngImport: i0, type: IgxCalendarModule, declarations: [IgxCalendarBaseDirective,
        IgxMonthPickerBaseDirective,
        IgxDayItemComponent,
        IgxDaysViewComponent,
        IgxCalendarComponent,
        IgxCalendarHeaderTemplateDirective,
        IgxCalendarMonthDirective,
        IgxCalendarYearDirective,
        IgxCalendarSubheaderTemplateDirective,
        IgxCalendarScrollMonthDirective,
        IgxMonthsViewComponent,
        IgxYearsViewComponent,
        IgxMonthPickerComponent,
        IgxMonthViewSlotsCalendar,
        IgxGetViewDateCalendar], imports: [CommonModule, FormsModule, IgxIconModule], exports: [IgxCalendarComponent,
        IgxDaysViewComponent,
        IgxMonthsViewComponent,
        IgxYearsViewComponent,
        IgxMonthPickerComponent,
        IgxCalendarHeaderTemplateDirective,
        IgxCalendarMonthDirective,
        IgxCalendarYearDirective,
        IgxCalendarSubheaderTemplateDirective] });
IgxCalendarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.0.0", ngImport: i0, type: IgxCalendarModule, imports: [CommonModule, FormsModule, IgxIconModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.0", ngImport: i0, type: IgxCalendarModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        IgxCalendarBaseDirective,
                        IgxMonthPickerBaseDirective,
                        IgxDayItemComponent,
                        IgxDaysViewComponent,
                        IgxCalendarComponent,
                        IgxCalendarHeaderTemplateDirective,
                        IgxCalendarMonthDirective,
                        IgxCalendarYearDirective,
                        IgxCalendarSubheaderTemplateDirective,
                        IgxCalendarScrollMonthDirective,
                        IgxMonthsViewComponent,
                        IgxYearsViewComponent,
                        IgxMonthPickerComponent,
                        IgxMonthViewSlotsCalendar,
                        IgxGetViewDateCalendar
                    ],
                    exports: [
                        IgxCalendarComponent,
                        IgxDaysViewComponent,
                        IgxMonthsViewComponent,
                        IgxYearsViewComponent,
                        IgxMonthPickerComponent,
                        IgxCalendarHeaderTemplateDirective,
                        IgxCalendarMonthDirective,
                        IgxCalendarYearDirective,
                        IgxCalendarSubheaderTemplateDirective
                    ],
                    imports: [CommonModule, FormsModule, IgxIconModule]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaWduaXRldWktYW5ndWxhci9zcmMvbGliL2NhbGVuZGFyL2NhbGVuZGFyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQzVELE9BQU8sRUFDSCxrQ0FBa0MsRUFDbEMseUJBQXlCLEVBQ3pCLHFDQUFxQyxFQUNyQyx3QkFBd0IsRUFDeEIsK0JBQStCLEVBQ2xDLE1BQU0sdUJBQXVCLENBQUM7QUFDL0IsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDN0UsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDMUUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDdkUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDckUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDaEYsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDM0QsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLHNCQUFzQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7O0FBRXZGOztHQUVHO0FBZ0NILE1BQU0sT0FBTyxpQkFBaUI7OzhHQUFqQixpQkFBaUI7K0dBQWpCLGlCQUFpQixpQkE3QnRCLHdCQUF3QjtRQUN4QiwyQkFBMkI7UUFDM0IsbUJBQW1CO1FBQ25CLG9CQUFvQjtRQUNwQixvQkFBb0I7UUFDcEIsa0NBQWtDO1FBQ2xDLHlCQUF5QjtRQUN6Qix3QkFBd0I7UUFDeEIscUNBQXFDO1FBQ3JDLCtCQUErQjtRQUMvQixzQkFBc0I7UUFDdEIscUJBQXFCO1FBQ3JCLHVCQUF1QjtRQUN2Qix5QkFBeUI7UUFDekIsc0JBQXNCLGFBYWhCLFlBQVksRUFBRSxXQUFXLEVBQUUsYUFBYSxhQVY5QyxvQkFBb0I7UUFDcEIsb0JBQW9CO1FBQ3BCLHNCQUFzQjtRQUN0QixxQkFBcUI7UUFDckIsdUJBQXVCO1FBQ3ZCLGtDQUFrQztRQUNsQyx5QkFBeUI7UUFDekIsd0JBQXdCO1FBQ3hCLHFDQUFxQzsrR0FJaEMsaUJBQWlCLFlBRmhCLFlBQVksRUFBRSxXQUFXLEVBQUUsYUFBYTsyRkFFekMsaUJBQWlCO2tCQS9CN0IsUUFBUTttQkFBQztvQkFDTixZQUFZLEVBQUU7d0JBQ1Ysd0JBQXdCO3dCQUN4QiwyQkFBMkI7d0JBQzNCLG1CQUFtQjt3QkFDbkIsb0JBQW9CO3dCQUNwQixvQkFBb0I7d0JBQ3BCLGtDQUFrQzt3QkFDbEMseUJBQXlCO3dCQUN6Qix3QkFBd0I7d0JBQ3hCLHFDQUFxQzt3QkFDckMsK0JBQStCO3dCQUMvQixzQkFBc0I7d0JBQ3RCLHFCQUFxQjt3QkFDckIsdUJBQXVCO3dCQUN2Qix5QkFBeUI7d0JBQ3pCLHNCQUFzQjtxQkFDekI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNMLG9CQUFvQjt3QkFDcEIsb0JBQW9CO3dCQUNwQixzQkFBc0I7d0JBQ3RCLHFCQUFxQjt3QkFDckIsdUJBQXVCO3dCQUN2QixrQ0FBa0M7d0JBQ2xDLHlCQUF5Qjt3QkFDekIsd0JBQXdCO3dCQUN4QixxQ0FBcUM7cUJBQ3hDO29CQUNELE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxXQUFXLEVBQUUsYUFBYSxDQUFDO2lCQUN0RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBJZ3hJY29uTW9kdWxlIH0gZnJvbSAnLi4vaWNvbi9wdWJsaWNfYXBpJztcbmltcG9ydCB7IElneENhbGVuZGFyQ29tcG9uZW50IH0gZnJvbSAnLi9jYWxlbmRhci5jb21wb25lbnQnO1xuaW1wb3J0IHtcbiAgICBJZ3hDYWxlbmRhckhlYWRlclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIElneENhbGVuZGFyTW9udGhEaXJlY3RpdmUsXG4gICAgSWd4Q2FsZW5kYXJTdWJoZWFkZXJUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hDYWxlbmRhclllYXJEaXJlY3RpdmUsXG4gICAgSWd4Q2FsZW5kYXJTY3JvbGxNb250aERpcmVjdGl2ZVxufSBmcm9tICcuL2NhbGVuZGFyLmRpcmVjdGl2ZXMnO1xuaW1wb3J0IHsgSWd4TW9udGhzVmlld0NvbXBvbmVudCB9IGZyb20gJy4vbW9udGhzLXZpZXcvbW9udGhzLXZpZXcuY29tcG9uZW50JztcbmltcG9ydCB7IElneFllYXJzVmlld0NvbXBvbmVudCB9IGZyb20gJy4veWVhcnMtdmlldy95ZWFycy12aWV3LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hEYXlzVmlld0NvbXBvbmVudCB9IGZyb20gJy4vZGF5cy12aWV3L2RheXMtdmlldy5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4RGF5SXRlbUNvbXBvbmVudCB9IGZyb20gJy4vZGF5cy12aWV3L2RheS1pdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hNb250aFBpY2tlckNvbXBvbmVudCB9IGZyb20gJy4vbW9udGgtcGlja2VyL21vbnRoLXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4Q2FsZW5kYXJCYXNlRGlyZWN0aXZlIH0gZnJvbSAnLi9jYWxlbmRhci1iYXNlJztcbmltcG9ydCB7IElneE1vbnRoUGlja2VyQmFzZURpcmVjdGl2ZSB9IGZyb20gJy4vbW9udGgtcGlja2VyLWJhc2UnO1xuaW1wb3J0IHsgSWd4TW9udGhWaWV3U2xvdHNDYWxlbmRhciwgSWd4R2V0Vmlld0RhdGVDYWxlbmRhciB9IGZyb20gJy4vbW9udGhzLXZpZXcucGlwZSc7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5ATmdNb2R1bGUoe1xuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBJZ3hDYWxlbmRhckJhc2VEaXJlY3RpdmUsXG4gICAgICAgIElneE1vbnRoUGlja2VyQmFzZURpcmVjdGl2ZSxcbiAgICAgICAgSWd4RGF5SXRlbUNvbXBvbmVudCxcbiAgICAgICAgSWd4RGF5c1ZpZXdDb21wb25lbnQsXG4gICAgICAgIElneENhbGVuZGFyQ29tcG9uZW50LFxuICAgICAgICBJZ3hDYWxlbmRhckhlYWRlclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDYWxlbmRhck1vbnRoRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDYWxlbmRhclllYXJEaXJlY3RpdmUsXG4gICAgICAgIElneENhbGVuZGFyU3ViaGVhZGVyVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIElneENhbGVuZGFyU2Nyb2xsTW9udGhEaXJlY3RpdmUsXG4gICAgICAgIElneE1vbnRoc1ZpZXdDb21wb25lbnQsXG4gICAgICAgIElneFllYXJzVmlld0NvbXBvbmVudCxcbiAgICAgICAgSWd4TW9udGhQaWNrZXJDb21wb25lbnQsXG4gICAgICAgIElneE1vbnRoVmlld1Nsb3RzQ2FsZW5kYXIsXG4gICAgICAgIElneEdldFZpZXdEYXRlQ2FsZW5kYXJcbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgSWd4Q2FsZW5kYXJDb21wb25lbnQsXG4gICAgICAgIElneERheXNWaWV3Q29tcG9uZW50LFxuICAgICAgICBJZ3hNb250aHNWaWV3Q29tcG9uZW50LFxuICAgICAgICBJZ3hZZWFyc1ZpZXdDb21wb25lbnQsXG4gICAgICAgIElneE1vbnRoUGlja2VyQ29tcG9uZW50LFxuICAgICAgICBJZ3hDYWxlbmRhckhlYWRlclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDYWxlbmRhck1vbnRoRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDYWxlbmRhclllYXJEaXJlY3RpdmUsXG4gICAgICAgIElneENhbGVuZGFyU3ViaGVhZGVyVGVtcGxhdGVEaXJlY3RpdmVcbiAgICBdLFxuICAgIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIEZvcm1zTW9kdWxlLCBJZ3hJY29uTW9kdWxlXVxufSlcbmV4cG9ydCBjbGFzcyBJZ3hDYWxlbmRhck1vZHVsZSB7IH1cbiJdfQ==