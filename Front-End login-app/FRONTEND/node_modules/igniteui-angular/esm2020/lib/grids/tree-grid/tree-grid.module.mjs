import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';
import { IgxTreeGridComponent } from './tree-grid.component';
import { IgxTreeGridRowComponent } from './tree-grid-row.component';
import { IgxGridCommonModule } from '../grid-common.module';
import { IgxTreeGridHierarchizingPipe, IgxTreeGridNormalizeRecordsPipe, IgxTreeGridAddRowPipe } from './tree-grid.pipes';
import { IgxTreeGridFlatteningPipe, IgxTreeGridSortingPipe, IgxTreeGridPagingPipe, IgxTreeGridTransactionPipe } from './tree-grid.pipes';
import { IgxTreeGridCellComponent } from './tree-cell.component';
import { IgxTreeGridFilteringPipe } from './tree-grid.filtering.pipe';
import { IgxTreeGridSummaryPipe } from './tree-grid.summary.pipe';
import { IgxRowLoadingIndicatorTemplateDirective } from './tree-grid.directives';
import { IgxTreeGridGroupingPipe } from './tree-grid.grouping.pipe';
import { IgxTreeGridGroupByAreaComponent } from '../grouping/tree-grid-group-by-area.component';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export class IgxTreeGridModule {
}
IgxTreeGridModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.0", ngImport: i0, type: IgxTreeGridModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IgxTreeGridModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.0.0", ngImport: i0, type: IgxTreeGridModule, declarations: [IgxTreeGridComponent,
        IgxTreeGridRowComponent,
        IgxTreeGridCellComponent,
        IgxTreeGridHierarchizingPipe,
        IgxTreeGridFlatteningPipe,
        IgxTreeGridSortingPipe,
        IgxTreeGridFilteringPipe,
        IgxTreeGridPagingPipe,
        IgxTreeGridTransactionPipe,
        IgxTreeGridSummaryPipe,
        IgxRowLoadingIndicatorTemplateDirective,
        IgxTreeGridNormalizeRecordsPipe,
        IgxTreeGridGroupingPipe,
        IgxTreeGridGroupByAreaComponent,
        IgxTreeGridAddRowPipe], imports: [IgxGridCommonModule], exports: [IgxTreeGridComponent,
        IgxTreeGridRowComponent,
        IgxTreeGridCellComponent,
        IgxRowLoadingIndicatorTemplateDirective,
        IgxGridCommonModule,
        IgxTreeGridGroupingPipe,
        IgxTreeGridGroupByAreaComponent,
        IgxTreeGridAddRowPipe] });
IgxTreeGridModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.0.0", ngImport: i0, type: IgxTreeGridModule, imports: [IgxGridCommonModule, IgxGridCommonModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.0", ngImport: i0, type: IgxTreeGridModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        IgxTreeGridComponent,
                        IgxTreeGridRowComponent,
                        IgxTreeGridCellComponent,
                        IgxTreeGridHierarchizingPipe,
                        IgxTreeGridFlatteningPipe,
                        IgxTreeGridSortingPipe,
                        IgxTreeGridFilteringPipe,
                        IgxTreeGridPagingPipe,
                        IgxTreeGridTransactionPipe,
                        IgxTreeGridSummaryPipe,
                        IgxRowLoadingIndicatorTemplateDirective,
                        IgxTreeGridNormalizeRecordsPipe,
                        IgxTreeGridGroupingPipe,
                        IgxTreeGridGroupByAreaComponent,
                        IgxTreeGridAddRowPipe
                    ],
                    exports: [
                        IgxTreeGridComponent,
                        IgxTreeGridRowComponent,
                        IgxTreeGridCellComponent,
                        IgxRowLoadingIndicatorTemplateDirective,
                        IgxGridCommonModule,
                        IgxTreeGridGroupingPipe,
                        IgxTreeGridGroupByAreaComponent,
                        IgxTreeGridAddRowPipe
                    ],
                    imports: [
                        IgxGridCommonModule
                    ],
                    schemas: [CUSTOM_ELEMENTS_SCHEMA]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1ncmlkLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9ncmlkcy90cmVlLWdyaWQvdHJlZS1ncmlkLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLHNCQUFzQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzdELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzVELE9BQU8sRUFBRSw0QkFBNEIsRUFBRSwrQkFBK0IsRUFBRSxxQkFBcUIsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3pILE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxzQkFBc0IsRUFBRSxxQkFBcUIsRUFBRSwwQkFBMEIsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3pJLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ2pFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSx1Q0FBdUMsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ2pGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLCtDQUErQyxDQUFDOztBQUNoRzs7R0FFRztBQWtDSCxNQUFNLE9BQU8saUJBQWlCOzs4R0FBakIsaUJBQWlCOytHQUFqQixpQkFBaUIsaUJBL0IxQixvQkFBb0I7UUFDcEIsdUJBQXVCO1FBQ3ZCLHdCQUF3QjtRQUN4Qiw0QkFBNEI7UUFDNUIseUJBQXlCO1FBQ3pCLHNCQUFzQjtRQUN0Qix3QkFBd0I7UUFDeEIscUJBQXFCO1FBQ3JCLDBCQUEwQjtRQUMxQixzQkFBc0I7UUFDdEIsdUNBQXVDO1FBQ3ZDLCtCQUErQjtRQUMvQix1QkFBdUI7UUFDdkIsK0JBQStCO1FBQy9CLHFCQUFxQixhQWFyQixtQkFBbUIsYUFWbkIsb0JBQW9CO1FBQ3BCLHVCQUF1QjtRQUN2Qix3QkFBd0I7UUFDeEIsdUNBQXVDO1FBQ3ZDLG1CQUFtQjtRQUNuQix1QkFBdUI7UUFDdkIsK0JBQStCO1FBQy9CLHFCQUFxQjsrR0FPWixpQkFBaUIsWUFKMUIsbUJBQW1CLEVBTm5CLG1CQUFtQjsyRkFVVixpQkFBaUI7a0JBakM3QixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWixvQkFBb0I7d0JBQ3BCLHVCQUF1Qjt3QkFDdkIsd0JBQXdCO3dCQUN4Qiw0QkFBNEI7d0JBQzVCLHlCQUF5Qjt3QkFDekIsc0JBQXNCO3dCQUN0Qix3QkFBd0I7d0JBQ3hCLHFCQUFxQjt3QkFDckIsMEJBQTBCO3dCQUMxQixzQkFBc0I7d0JBQ3RCLHVDQUF1Qzt3QkFDdkMsK0JBQStCO3dCQUMvQix1QkFBdUI7d0JBQ3ZCLCtCQUErQjt3QkFDL0IscUJBQXFCO3FCQUN0QjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1Asb0JBQW9CO3dCQUNwQix1QkFBdUI7d0JBQ3ZCLHdCQUF3Qjt3QkFDeEIsdUNBQXVDO3dCQUN2QyxtQkFBbUI7d0JBQ25CLHVCQUF1Qjt3QkFDdkIsK0JBQStCO3dCQUMvQixxQkFBcUI7cUJBQ3RCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxtQkFBbUI7cUJBQ3BCO29CQUNELE9BQU8sRUFBRSxDQUFDLHNCQUFzQixDQUFDO2lCQUNsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBDVVNUT01fRUxFTUVOVFNfU0NIRU1BIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJZ3hUcmVlR3JpZENvbXBvbmVudCB9IGZyb20gJy4vdHJlZS1ncmlkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hUcmVlR3JpZFJvd0NvbXBvbmVudCB9IGZyb20gJy4vdHJlZS1ncmlkLXJvdy5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4R3JpZENvbW1vbk1vZHVsZSB9IGZyb20gJy4uL2dyaWQtY29tbW9uLm1vZHVsZSc7XG5pbXBvcnQgeyBJZ3hUcmVlR3JpZEhpZXJhcmNoaXppbmdQaXBlLCBJZ3hUcmVlR3JpZE5vcm1hbGl6ZVJlY29yZHNQaXBlLCBJZ3hUcmVlR3JpZEFkZFJvd1BpcGUgfSBmcm9tICcuL3RyZWUtZ3JpZC5waXBlcyc7XG5pbXBvcnQgeyBJZ3hUcmVlR3JpZEZsYXR0ZW5pbmdQaXBlLCBJZ3hUcmVlR3JpZFNvcnRpbmdQaXBlLCBJZ3hUcmVlR3JpZFBhZ2luZ1BpcGUsIElneFRyZWVHcmlkVHJhbnNhY3Rpb25QaXBlIH0gZnJvbSAnLi90cmVlLWdyaWQucGlwZXMnO1xuaW1wb3J0IHsgSWd4VHJlZUdyaWRDZWxsQ29tcG9uZW50IH0gZnJvbSAnLi90cmVlLWNlbGwuY29tcG9uZW50JztcbmltcG9ydCB7IElneFRyZWVHcmlkRmlsdGVyaW5nUGlwZSB9IGZyb20gJy4vdHJlZS1ncmlkLmZpbHRlcmluZy5waXBlJztcbmltcG9ydCB7IElneFRyZWVHcmlkU3VtbWFyeVBpcGUgfSBmcm9tICcuL3RyZWUtZ3JpZC5zdW1tYXJ5LnBpcGUnO1xuaW1wb3J0IHsgSWd4Um93TG9hZGluZ0luZGljYXRvclRlbXBsYXRlRGlyZWN0aXZlIH0gZnJvbSAnLi90cmVlLWdyaWQuZGlyZWN0aXZlcyc7XG5pbXBvcnQgeyBJZ3hUcmVlR3JpZEdyb3VwaW5nUGlwZSB9IGZyb20gJy4vdHJlZS1ncmlkLmdyb3VwaW5nLnBpcGUnO1xuaW1wb3J0IHsgSWd4VHJlZUdyaWRHcm91cEJ5QXJlYUNvbXBvbmVudCB9IGZyb20gJy4uL2dyb3VwaW5nL3RyZWUtZ3JpZC1ncm91cC1ieS1hcmVhLmNvbXBvbmVudCc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgSWd4VHJlZUdyaWRDb21wb25lbnQsXG4gICAgSWd4VHJlZUdyaWRSb3dDb21wb25lbnQsXG4gICAgSWd4VHJlZUdyaWRDZWxsQ29tcG9uZW50LFxuICAgIElneFRyZWVHcmlkSGllcmFyY2hpemluZ1BpcGUsXG4gICAgSWd4VHJlZUdyaWRGbGF0dGVuaW5nUGlwZSxcbiAgICBJZ3hUcmVlR3JpZFNvcnRpbmdQaXBlLFxuICAgIElneFRyZWVHcmlkRmlsdGVyaW5nUGlwZSxcbiAgICBJZ3hUcmVlR3JpZFBhZ2luZ1BpcGUsXG4gICAgSWd4VHJlZUdyaWRUcmFuc2FjdGlvblBpcGUsXG4gICAgSWd4VHJlZUdyaWRTdW1tYXJ5UGlwZSxcbiAgICBJZ3hSb3dMb2FkaW5nSW5kaWNhdG9yVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgSWd4VHJlZUdyaWROb3JtYWxpemVSZWNvcmRzUGlwZSxcbiAgICBJZ3hUcmVlR3JpZEdyb3VwaW5nUGlwZSxcbiAgICBJZ3hUcmVlR3JpZEdyb3VwQnlBcmVhQ29tcG9uZW50LFxuICAgIElneFRyZWVHcmlkQWRkUm93UGlwZVxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgSWd4VHJlZUdyaWRDb21wb25lbnQsXG4gICAgSWd4VHJlZUdyaWRSb3dDb21wb25lbnQsXG4gICAgSWd4VHJlZUdyaWRDZWxsQ29tcG9uZW50LFxuICAgIElneFJvd0xvYWRpbmdJbmRpY2F0b3JUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hHcmlkQ29tbW9uTW9kdWxlLFxuICAgIElneFRyZWVHcmlkR3JvdXBpbmdQaXBlLFxuICAgIElneFRyZWVHcmlkR3JvdXBCeUFyZWFDb21wb25lbnQsXG4gICAgSWd4VHJlZUdyaWRBZGRSb3dQaXBlXG4gIF0sXG4gIGltcG9ydHM6IFtcbiAgICBJZ3hHcmlkQ29tbW9uTW9kdWxlXG4gIF0sXG4gIHNjaGVtYXM6IFtDVVNUT01fRUxFTUVOVFNfU0NIRU1BXVxufSlcbmV4cG9ydCBjbGFzcyBJZ3hUcmVlR3JpZE1vZHVsZSB7XG59XG4iXX0=